---
# tasks file for aptly

- name: import aptly repo key
  sudo: yes
  apt_key: id=9E3E53F19C7DE460 keyserver=keys.gnupg.net state=present

- name: add aptly debian repository
  sudo: yes
  apt_repository: repo='deb http://repo.aptly.info/ squeeze main' state=present update_cache=yes

- name: install required packages
  sudo: yes
  apt: name={{ item }} state=present
  with_items:
    - gnupg2
    - rng-tools
    - aptly

# begin key creation tasks (automatically generates and imports a DSA key-pair to get you up and running quickly)

- name: start rngd for entropy creation
  sudo: true
  command: rngd -b -r /dev/hwrandom creates={{ aptly_gpg_key_dir }}/key.sec

- name: copy gpg key-gen batch file
  template:
    src: gpg2_gen_key.j2
    owner: "{{ aptly_user }}"
    dest: "{{ aptly_gpg_key_dir }}/gpg2_gen_key"
    mode: 0644

- name: create key
  command: gpg --batch --gen-key {{ aptly_gpg_key_dir }}/gpg2_gen_key creates={{ aptly_gpg_key_dir }}/key.sec

- name: chown key to user
  file: 
    name: "{{ aptly_gpg_key_dir }}/key.sec"
    owner: "{{ aptly_user }}"

- name: stop random source
  service:
    name: rng-tools
    state: stopped

- name: import pub key to gnupg
  command: gpg2 --import {{ aptly_gpg_key_dir }}/key.pub

# ignore 'already in secret keyring' error
- name: import sec key to gnupg
  command: gpg2 --import {{ aptly_gpg_key_dir }}/key.sec
  ignore_errors: yes

- name: delete old .gnupg
  when: aptly_user != "root"
  file: 
    name: "{{ aptly_gpg_key_dir }}/.gnupg"
    state: absent

- name: move .gnupg to aptly user
  when: aptly_user != "root"
  command: "mv /root/.gnupg {{ aptly_gpg_key_dir }}"
  ignore_errors: yes

- name: chown .gnupg to aptly user
  when: aptly_user != "root"
  file: 
    name: "{{ aptly_gpg_key_dir }}/.gnupg"
    recurse: yes
    owner: "{{ aptly_user }}"

# end key creation tasks
- name: create upstart config
  template: 
    src: aptly-upstart.conf.j2
    dest: /etc/init/aptly.conf

- name: create aptly config
  template: 
    src: aptly.conf.j2
    dest: /etc/aptly.conf

- name: restart aptly
  service: name=aptly state=restarted

- name: create repositories
  command: >
    curl -X POST -H 'Content-Type: application/json' --data '{"name": "{{ item.name }}", "comment": "{{ item.comment }}", "DefaultDistribution": "{{ item.default_distribution }}", "DefaultComponent": "{{ item.default_component }}" }' http://localhost:8080/api/repos
  with_items: "{{ aptly_repositories }}"
  when: aptly_repositories is defined

- include: test.yml
